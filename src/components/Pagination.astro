---
import { Icon } from '@astrojs/starlight/components';
import type { Props } from '@astrojs/starlight/props';

const { dir, pagination } = Astro.props;
const { prev, next } = pagination || {};
const isRtl = dir === 'rtl';
---

<div class="page-nav-container">
  <div class="page-cards" dir={dir}>
    {prev && (
      <a href={prev.href} rel="prev" class="page-card">
        <div class="page-card-inner">
          <div class="card-direction">
            <Icon name={isRtl ? 'right-arrow' : 'left-arrow'} size="1.25rem" />
            <span class="direction-text">Previous</span>
          </div>
          <h4 class="card-title">{prev.label}</h4>
          <div class="card-shine"></div>
        </div>
      </a>
    )}
    {next && (
      <a href={next.href} rel="next" class="page-card">
        <div class="page-card-inner">
          <div class="card-direction">
            <span class="direction-text">Next</span>
            <Icon name={isRtl ? 'left-arrow' : 'right-arrow'} size="1.25rem" />
          </div>
          <h4 class="card-title">{next.label}</h4>
          <div class="card-shine"></div>
        </div>
      </a>
    )}
  </div>
</div>

<style>
  .page-nav-container {
    margin-top: 3rem;
    border-top: 1px solid rgba(255, 255, 255, 0.05);
    padding-top: 1.5rem;
  }

  .page-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(18rem, 100%), 1fr));
    gap: 1.5rem;
  }

  .page-card {
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .page-card-inner {
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 1.5rem;
    background: rgba(30, 30, 35, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius);
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    position: relative;
    overflow: hidden;
  }

  .page-card-inner:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, var(--rust-color), var(--js-color));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s ease;
  }

  .page-card:hover .page-card-inner {
    transform: translateY(-5px);
    background: rgba(40, 40, 45, 0.5);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .page-card:hover .page-card-inner:before {
    transform: scaleX(1);
  }

  .card-direction {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: var(--color-text-dimmed);
    margin-bottom: 0.5rem;
  }

  [rel='next'] .card-direction {
    justify-content: flex-end;
  }

  .direction-text {
    font-weight: 500;
  }

  .card-title {
    font-size: 1.3rem;
    font-weight: 600;
    margin: 0.5rem 0;
    line-height: 1.3;
    color: white;
  }

  .card-shine {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .page-card:hover .card-shine {
    opacity: 1;
  }

  @media (max-width: 600px) {
    .page-cards {
      grid-template-columns: 1fr;
    }
  }
</style> 